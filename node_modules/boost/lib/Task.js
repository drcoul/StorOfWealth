'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /**
                                                                                                                                                                                                                                                                   * @copyright   2017, Miles Johnson
                                                                                                                                                                                                                                                                   * @license     https://opensource.org/licenses/MIT
                                                                                                                                                                                                                                                                   * 
                                                                                                                                                                                                                                                                   */

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

var _elegantSpinner = require('elegant-spinner');

var _constants = require('./constants');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class Task {

  constructor(title, action = null, defaultConfig = {}) {
    this.action = null;
    this.config = {};
    this.context = {};
    this.frame = 0;
    this.title = '';
    this.status = _constants.PENDING;
    this.subroutines = [];
    this.subtasks = [];

    if (!title || typeof title !== 'string') {
      throw new Error('Tasks require a title.');
    }

    if (action !== null && typeof action !== 'function') {
      throw new Error('Tasks require an executable function.');
    }

    this.action = action;
    this.config = _extends({}, defaultConfig);
    this.status = action ? _constants.PENDING : _constants.SKIPPED;
    this.title = title;
  }

  hasFailed() {
    return this.status === _constants.FAILED;
  }

  hasPassed() {
    return this.status === _constants.PASSED;
  }

  isPending() {
    return this.status === _constants.PENDING;
  }

  isRunning() {
    return this.status === _constants.RUNNING;
  }

  isSkipped() {
    return this.status === _constants.SKIPPED;
  }

  run(value, context = {}) {
    this.context = context;

    if (this.isSkipped() || !this.action) {
      return _bluebird2.default.resolve(value);
    }

    this.status = _constants.RUNNING;

    return new _bluebird2.default(resolve => {
      resolve(this.action(value, context));
    }).then(result => {
      this.status = _constants.PASSED;

      return result;
    }, error => {
      this.status = _constants.FAILED;

      throw error;
    });
  }

  skip(condition = true) {
    if (condition) {
      this.status = _constants.SKIPPED;
    }

    return this;
  }

  spinner() {
    this.frame = ++this.frame % _elegantSpinner.frames.length;

    return _elegantSpinner.frames[this.frame];
  }

  wrap(value) {
    return value instanceof _bluebird2.default ? value : _bluebird2.default.resolve(value);
  }
}
exports.default = Task;